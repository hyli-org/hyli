[package]
name = "hyle-hydentity"
description = "Hyli Smart Contract"
license = "MIT"
version = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
rust-version = "1.81"

[[bin]]
name = "hydentity"
path = "src/main.rs"
required-features = ["risc0"]
test = false

[[example]]
name = "hydentity-runner"
path = "examples/host.rs"

[dependencies]
sdk = { workspace = true }
serde_json = { workspace = true }
serde = { workspace = true, features = ["derive", "alloc"] }
anyhow = { workspace = true }
borsh = { workspace = true, features = ["derive"] }
hex = { workspace = true }

risc0-zkvm = { workspace = true, optional = true, features = ['std'] }
client-sdk = { workspace = true, features = [
  "risc0",
  "indexer",
], optional = true }
sha2 = { workspace = true }

[dev-dependencies]
# Activate client in examples.
sdk = { workspace = true, features = ["full-model", "tracing"] }
hyle-hydentity = { path = ".", features = ["client"] }
client-sdk = { workspace = true, features = ["risc0", "rest", "indexer"] }

clap = { workspace = true }
tokio = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
mockall = { workspace = true }

[features]
default = []
client = ["dep:client-sdk"]
risc0 = ["dep:risc0-zkvm", "sdk/risc0"]

[package.metadata.docs.rs]
features = ["client"]
